[{"/Users/jonathanwong/Documents/hackathon/src/index.js":"1","/Users/jonathanwong/Documents/hackathon/src/reportWebVitals.js":"2","/Users/jonathanwong/Documents/hackathon/src/App.js":"3","/Users/jonathanwong/Documents/hackathon/src/contexts/story.js":"4","/Users/jonathanwong/Documents/hackathon/src/containers/Panel/index.js":"5","/Users/jonathanwong/Documents/hackathon/src/containers/CreateStory/index.js":"6","/Users/jonathanwong/Documents/hackathon/src/containers/Dashboard/index.js":"7","/Users/jonathanwong/Documents/hackathon/src/containers/CreatePanel/index.js":"8","/Users/jonathanwong/Documents/hackathon/src/components/PreviewPanel/index.js":"9","/Users/jonathanwong/Documents/hackathon/src/components/StoryPanel/index.js":"10","/Users/jonathanwong/Documents/hackathon/src/components/Header/index.js":"11","/Users/jonathanwong/Documents/hackathon/src/containers/ReadStory/index.js":"12"},{"size":500,"mtime":1607613137504,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607613137505,"results":"15","hashOfConfig":"14"},{"size":999,"mtime":1607628089312,"results":"16","hashOfConfig":"14"},{"size":4149,"mtime":1607626831940,"results":"17","hashOfConfig":"14"},{"size":100,"mtime":1607616025978,"results":"18","hashOfConfig":"14"},{"size":1186,"mtime":1607624674754,"results":"19","hashOfConfig":"14"},{"size":112,"mtime":1607616020749,"results":"20","hashOfConfig":"14"},{"size":922,"mtime":1607624674753,"results":"21","hashOfConfig":"14"},{"size":743,"mtime":1607627651397,"results":"22","hashOfConfig":"14"},{"size":1410,"mtime":1607624674752,"results":"23","hashOfConfig":"14"},{"size":523,"mtime":1607628108309,"results":"24","hashOfConfig":"14"},{"size":0,"mtime":1607626847637,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"pv7q48",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonathanwong/Documents/hackathon/src/index.js",[],["52","53"],"/Users/jonathanwong/Documents/hackathon/src/reportWebVitals.js",[],"/Users/jonathanwong/Documents/hackathon/src/App.js",[],"/Users/jonathanwong/Documents/hackathon/src/contexts/story.js",[],"/Users/jonathanwong/Documents/hackathon/src/containers/Panel/index.js",[],"/Users/jonathanwong/Documents/hackathon/src/containers/CreateStory/index.js",[],"/Users/jonathanwong/Documents/hackathon/src/containers/Dashboard/index.js",[],"/Users/jonathanwong/Documents/hackathon/src/containers/CreatePanel/index.js",["54","55"],"import React, {useState, useEffect} from 'react';\nimport StoryPanel from '../../components/StoryPanel'\n\nconst CreatePanel = () => {\n\n  const [panelType, setPanelType] = useState('')\n\n  const handlePanelType = (e) => {\n    const {value} = e.currentTarget\n\n    setPanelType(value)\n  }\n\n  const isStory = panelType === 'story'\n  const isGame = panelType === 'game'\n\n  return (\n    <div className=\"createPanel\">\n      <div className=\"createPanel__select-wrapper\" style={{marginBottom: \"50px\", display:'block'}}>\n        <select className=\"createPanel__select\" value={panelType} onChange={(e) => handlePanelType(e)}>\n          <option value=\"\">Please select a panel type</option>\n          <option value=\"story\">Story Panel</option>\n          <option value=\"game\">Game Panel</option>\n        </select>\n      </div>\n\n      <div>\n        {isStory && <StoryPanel />}\n\n      </div>\n\n\n\n\n    </div>\n  )\n}\n\nexport default CreatePanel;","/Users/jonathanwong/Documents/hackathon/src/components/PreviewPanel/index.js",[],"/Users/jonathanwong/Documents/hackathon/src/components/StoryPanel/index.js",[],"/Users/jonathanwong/Documents/hackathon/src/components/Header/index.js",[],"/Users/jonathanwong/Documents/hackathon/src/containers/ReadStory/index.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":26,"nodeType":"62","messageId":"63","endLine":1,"endColumn":35},{"ruleId":"60","severity":1,"message":"64","line":15,"column":9,"nodeType":"62","messageId":"63","endLine":15,"endColumn":15},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isGame' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]